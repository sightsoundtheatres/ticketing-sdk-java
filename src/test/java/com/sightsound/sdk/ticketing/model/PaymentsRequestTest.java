/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sightsound.sdk.ticketing.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.sightsound.sdk.ticketing.model.AccountInfo;
import com.sightsound.sdk.ticketing.model.Address;
import com.sightsound.sdk.ticketing.model.Amount;
import com.sightsound.sdk.ticketing.model.ApplicationInfo;
import com.sightsound.sdk.ticketing.model.BrowserInfo;
import com.sightsound.sdk.ticketing.model.CheckoutOrder;
import com.sightsound.sdk.ticketing.model.Company;
import com.sightsound.sdk.ticketing.model.ForexQuote;
import com.sightsound.sdk.ticketing.model.Installments;
import com.sightsound.sdk.ticketing.model.LineItem;
import com.sightsound.sdk.ticketing.model.Mandate;
import com.sightsound.sdk.ticketing.model.MerchantRiskIndicator;
import com.sightsound.sdk.ticketing.model.Name;
import com.sightsound.sdk.ticketing.model.PaymentMethodDetails;
import com.sightsound.sdk.ticketing.model.RiskData;
import com.sightsound.sdk.ticketing.model.Split;
import com.sightsound.sdk.ticketing.model.ThreeDS2RequestData;
import com.sightsound.sdk.ticketing.model.ThreeDSecureData;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for PaymentsRequest
 */
public class PaymentsRequestTest {
    private final PaymentsRequest model = new PaymentsRequest();

    /**
     * Model tests for PaymentsRequest
     */
    @Test
    public void testPaymentsRequest() {
        // TODO: test PaymentsRequest
    }

    /**
     * Test the property 'accountInfo'
     */
    @Test
    public void accountInfoTest() {
        // TODO: test accountInfo
    }

    /**
     * Test the property 'additionalData'
     */
    @Test
    public void additionalDataTest() {
        // TODO: test additionalData
    }

    /**
     * Test the property 'amount'
     */
    @Test
    public void amountTest() {
        // TODO: test amount
    }

    /**
     * Test the property 'billingAddress'
     */
    @Test
    public void billingAddressTest() {
        // TODO: test billingAddress
    }

    /**
     * Test the property 'captureDelayHours'
     */
    @Test
    public void captureDelayHoursTest() {
        // TODO: test captureDelayHours
    }

    /**
     * Test the property 'checkoutAttemptId'
     */
    @Test
    public void checkoutAttemptIdTest() {
        // TODO: test checkoutAttemptId
    }

    /**
     * Test the property 'channel'
     */
    @Test
    public void channelTest() {
        // TODO: test channel
    }

    /**
     * Test the property 'company'
     */
    @Test
    public void companyTest() {
        // TODO: test company
    }

    /**
     * Test the property 'countryCode'
     */
    @Test
    public void countryCodeTest() {
        // TODO: test countryCode
    }

    /**
     * Test the property 'dateOfBirth'
     */
    @Test
    public void dateOfBirthTest() {
        // TODO: test dateOfBirth
    }

    /**
     * Test the property 'dccQuote'
     */
    @Test
    public void dccQuoteTest() {
        // TODO: test dccQuote
    }

    /**
     * Test the property 'deliveryAddress'
     */
    @Test
    public void deliveryAddressTest() {
        // TODO: test deliveryAddress
    }

    /**
     * Test the property 'deliveryDate'
     */
    @Test
    public void deliveryDateTest() {
        // TODO: test deliveryDate
    }

    /**
     * Test the property 'enableOneClick'
     */
    @Test
    public void enableOneClickTest() {
        // TODO: test enableOneClick
    }

    /**
     * Test the property 'enablePayOut'
     */
    @Test
    public void enablePayOutTest() {
        // TODO: test enablePayOut
    }

    /**
     * Test the property 'enableRecurring'
     */
    @Test
    public void enableRecurringTest() {
        // TODO: test enableRecurring
    }

    /**
     * Test the property 'entityType'
     */
    @Test
    public void entityTypeTest() {
        // TODO: test entityType
    }

    /**
     * Test the property 'fraudOffset'
     */
    @Test
    public void fraudOffsetTest() {
        // TODO: test fraudOffset
    }

    /**
     * Test the property 'installments'
     */
    @Test
    public void installmentsTest() {
        // TODO: test installments
    }

    /**
     * Test the property 'lineItems'
     */
    @Test
    public void lineItemsTest() {
        // TODO: test lineItems
    }

    /**
     * Test the property 'mcc'
     */
    @Test
    public void mccTest() {
        // TODO: test mcc
    }

    /**
     * Test the property 'merchantAccount'
     */
    @Test
    public void merchantAccountTest() {
        // TODO: test merchantAccount
    }

    /**
     * Test the property 'merchantOrderReference'
     */
    @Test
    public void merchantOrderReferenceTest() {
        // TODO: test merchantOrderReference
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'orderReference'
     */
    @Test
    public void orderReferenceTest() {
        // TODO: test orderReference
    }

    /**
     * Test the property 'paymentMethod'
     */
    @Test
    public void paymentMethodTest() {
        // TODO: test paymentMethod
    }

    /**
     * Test the property 'reference'
     */
    @Test
    public void referenceTest() {
        // TODO: test reference
    }

    /**
     * Test the property 'returnUrl'
     */
    @Test
    public void returnUrlTest() {
        // TODO: test returnUrl
    }

    /**
     * Test the property 'sessionValidity'
     */
    @Test
    public void sessionValidityTest() {
        // TODO: test sessionValidity
    }

    /**
     * Test the property 'shopperEmail'
     */
    @Test
    public void shopperEmailTest() {
        // TODO: test shopperEmail
    }

    /**
     * Test the property 'shopperIP'
     */
    @Test
    public void shopperIPTest() {
        // TODO: test shopperIP
    }

    /**
     * Test the property 'shopperInteraction'
     */
    @Test
    public void shopperInteractionTest() {
        // TODO: test shopperInteraction
    }

    /**
     * Test the property 'shopperLocale'
     */
    @Test
    public void shopperLocaleTest() {
        // TODO: test shopperLocale
    }

    /**
     * Test the property 'shopperName'
     */
    @Test
    public void shopperNameTest() {
        // TODO: test shopperName
    }

    /**
     * Test the property 'shopperReference'
     */
    @Test
    public void shopperReferenceTest() {
        // TODO: test shopperReference
    }

    /**
     * Test the property 'shopperStatement'
     */
    @Test
    public void shopperStatementTest() {
        // TODO: test shopperStatement
    }

    /**
     * Test the property 'socialSecurityNumber'
     */
    @Test
    public void socialSecurityNumberTest() {
        // TODO: test socialSecurityNumber
    }

    /**
     * Test the property 'telephoneNumber'
     */
    @Test
    public void telephoneNumberTest() {
        // TODO: test telephoneNumber
    }

    /**
     * Test the property 'browserInfo'
     */
    @Test
    public void browserInfoTest() {
        // TODO: test browserInfo
    }

    /**
     * Test the property 'deviceFingerprint'
     */
    @Test
    public void deviceFingerprintTest() {
        // TODO: test deviceFingerprint
    }

    /**
     * Test the property 'applicationInfo'
     */
    @Test
    public void applicationInfoTest() {
        // TODO: test applicationInfo
    }

    /**
     * Test the property 'splits'
     */
    @Test
    public void splitsTest() {
        // TODO: test splits
    }

    /**
     * Test the property 'merchantRiskIndicator'
     */
    @Test
    public void merchantRiskIndicatorTest() {
        // TODO: test merchantRiskIndicator
    }

    /**
     * Test the property 'threeDS2RequestData'
     */
    @Test
    public void threeDS2RequestDataTest() {
        // TODO: test threeDS2RequestData
    }

    /**
     * Test the property 'trustedShopper'
     */
    @Test
    public void trustedShopperTest() {
        // TODO: test trustedShopper
    }

    /**
     * Test the property 'origin'
     */
    @Test
    public void originTest() {
        // TODO: test origin
    }

    /**
     * Test the property 'recurringProcessingModel'
     */
    @Test
    public void recurringProcessingModelTest() {
        // TODO: test recurringProcessingModel
    }

    /**
     * Test the property 'mpiData'
     */
    @Test
    public void mpiDataTest() {
        // TODO: test mpiData
    }

    /**
     * Test the property 'redirectFromIssuerMethod'
     */
    @Test
    public void redirectFromIssuerMethodTest() {
        // TODO: test redirectFromIssuerMethod
    }

    /**
     * Test the property 'redirectToIssuerMethod'
     */
    @Test
    public void redirectToIssuerMethodTest() {
        // TODO: test redirectToIssuerMethod
    }

    /**
     * Test the property 'order'
     */
    @Test
    public void orderTest() {
        // TODO: test order
    }

    /**
     * Test the property 'storePaymentMethod'
     */
    @Test
    public void storePaymentMethodTest() {
        // TODO: test storePaymentMethod
    }

    /**
     * Test the property 'store'
     */
    @Test
    public void storeTest() {
        // TODO: test store
    }

    /**
     * Test the property 'threeDSAuthenticationOnly'
     */
    @Test
    public void threeDSAuthenticationOnlyTest() {
        // TODO: test threeDSAuthenticationOnly
    }

    /**
     * Test the property 'riskData'
     */
    @Test
    public void riskDataTest() {
        // TODO: test riskData
    }

    /**
     * Test the property 'conversionId'
     */
    @Test
    public void conversionIdTest() {
        // TODO: test conversionId
    }

    /**
     * Test the property 'recurringExpiry'
     */
    @Test
    public void recurringExpiryTest() {
        // TODO: test recurringExpiry
    }

    /**
     * Test the property 'recurringFrequency'
     */
    @Test
    public void recurringFrequencyTest() {
        // TODO: test recurringFrequency
    }

    /**
     * Test the property 'mandate'
     */
    @Test
    public void mandateTest() {
        // TODO: test mandate
    }

}
