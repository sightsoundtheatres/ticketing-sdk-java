/*
 * Helios
 * Sight & Sound Theatres Ticketing API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: DeveloperTeam@sight-sound.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sightsound.sdk.ticketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.sightsound.sdk.ticketing.model.ItemType;
import com.sightsound.sdk.ticketing.model.LocationDescription;
import com.sightsound.sdk.ticketing.model.Schedule;
import com.sightsound.sdk.ticketing.model.ShowBudget;
import com.sightsound.sdk.ticketing.model.ShowTrackingDetail;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.sightsound.sdk.ticketing.JSON;

/**
 * Event
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-07-01T08:40:20.483181-05:00[America/Chicago]")
public class Event {
  public static final String SERIALIZED_NAME_EVENT_CODE = "eventCode";
  @SerializedName(SERIALIZED_NAME_EVENT_CODE)
  private String eventCode;

  public static final String SERIALIZED_NAME_EVENT_NAME = "eventName";
  @SerializedName(SERIALIZED_NAME_EVENT_NAME)
  private String eventName;

  public static final String SERIALIZED_NAME_ITEM_TYPE = "itemType";
  @SerializedName(SERIALIZED_NAME_ITEM_TYPE)
  private ItemType itemType;

  public static final String SERIALIZED_NAME_EVENT_TIME_MINUTES = "eventTimeMinutes";
  @SerializedName(SERIALIZED_NAME_EVENT_TIME_MINUTES)
  private Integer eventTimeMinutes;

  public static final String SERIALIZED_NAME_TICKETED = "ticketed";
  @SerializedName(SERIALIZED_NAME_TICKETED)
  private Boolean ticketed;

  public static final String SERIALIZED_NAME_TICKET_STYLE_CODE = "ticketStyleCode";
  @SerializedName(SERIALIZED_NAME_TICKET_STYLE_CODE)
  private String ticketStyleCode;

  public static final String SERIALIZED_NAME_LOCATION_CODE = "locationCode";
  @SerializedName(SERIALIZED_NAME_LOCATION_CODE)
  private String locationCode;

  public static final String SERIALIZED_NAME_SEATING_TEMPLATE_CODE = "seatingTemplateCode";
  @SerializedName(SERIALIZED_NAME_SEATING_TEMPLATE_CODE)
  private String seatingTemplateCode;

  public static final String SERIALIZED_NAME_EVENT_DISPLAY_COLOR = "eventDisplayColor";
  @SerializedName(SERIALIZED_NAME_EVENT_DISPLAY_COLOR)
  private String eventDisplayColor;

  public static final String SERIALIZED_NAME_ALLOW_ORDER_TIX = "allowOrderTix";
  @SerializedName(SERIALIZED_NAME_ALLOW_ORDER_TIX)
  private Boolean allowOrderTix;

  public static final String SERIALIZED_NAME_INTERNET_SEATS_MINIMUM_LIMIT = "internetSeatsMinimumLimit";
  @SerializedName(SERIALIZED_NAME_INTERNET_SEATS_MINIMUM_LIMIT)
  private Integer internetSeatsMinimumLimit;

  public static final String SERIALIZED_NAME_EVENT_START_DATE = "eventStartDate";
  @SerializedName(SERIALIZED_NAME_EVENT_START_DATE)
  private OffsetDateTime eventStartDate;

  public static final String SERIALIZED_NAME_EVENT_END_DATE = "eventEndDate";
  @SerializedName(SERIALIZED_NAME_EVENT_END_DATE)
  private OffsetDateTime eventEndDate;

  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_EVENT_TYPE_DETAIL_CODE = "eventTypeDetailCode";
  @SerializedName(SERIALIZED_NAME_EVENT_TYPE_DETAIL_CODE)
  private String eventTypeDetailCode;

  public static final String SERIALIZED_NAME_COMP_TICKETS_SEATS_MIN = "compTicketsSeatsMin";
  @SerializedName(SERIALIZED_NAME_COMP_TICKETS_SEATS_MIN)
  private Integer compTicketsSeatsMin;

  public static final String SERIALIZED_NAME_COMP_TICKETS_START_DATE = "compTicketsStartDate";
  @SerializedName(SERIALIZED_NAME_COMP_TICKETS_START_DATE)
  private OffsetDateTime compTicketsStartDate;

  public static final String SERIALIZED_NAME_THEATER_LOCATION = "theaterLocation";
  @SerializedName(SERIALIZED_NAME_THEATER_LOCATION)
  private LocationDescription theaterLocation;

  public static final String SERIALIZED_NAME_EMP_DISC_DAYS_TO_SHOW = "empDiscDaysToShow";
  @SerializedName(SERIALIZED_NAME_EMP_DISC_DAYS_TO_SHOW)
  private Integer empDiscDaysToShow;

  public static final String SERIALIZED_NAME_EMP_DISC_PERCENT = "empDiscPercent";
  @SerializedName(SERIALIZED_NAME_EMP_DISC_PERCENT)
  private BigDecimal empDiscPercent;

  public static final String SERIALIZED_NAME_TAX_CODE = "taxCode";
  @SerializedName(SERIALIZED_NAME_TAX_CODE)
  private String taxCode;

  public static final String SERIALIZED_NAME_EXTERNAL_BOOKING = "externalBooking";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_BOOKING)
  private Boolean externalBooking;

  public static final String SERIALIZED_NAME_EXTERNAL_BOOKING_THRESHOLD = "externalBookingThreshold";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_BOOKING_THRESHOLD)
  private Integer externalBookingThreshold;

  public static final String SERIALIZED_NAME_COMP_TICKETS_MAX = "compTicketsMax";
  @SerializedName(SERIALIZED_NAME_COMP_TICKETS_MAX)
  private Integer compTicketsMax;

  public static final String SERIALIZED_NAME_EMP_DAY_TICKETS_MAX = "empDayTicketsMax";
  @SerializedName(SERIALIZED_NAME_EMP_DAY_TICKETS_MAX)
  private Integer empDayTicketsMax;

  public static final String SERIALIZED_NAME_PREMIER_SHOW = "premierShow";
  @SerializedName(SERIALIZED_NAME_PREMIER_SHOW)
  private Boolean premierShow;

  public static final String SERIALIZED_NAME_TAXABLE = "taxable";
  @SerializedName(SERIALIZED_NAME_TAXABLE)
  private Boolean taxable;

  public static final String SERIALIZED_NAME_ALLOW_GROUP = "allowGroup";
  @SerializedName(SERIALIZED_NAME_ALLOW_GROUP)
  private Boolean allowGroup;

  public static final String SERIALIZED_NAME_EMP_SEATS_MIN = "empSeatsMin";
  @SerializedName(SERIALIZED_NAME_EMP_SEATS_MIN)
  private Integer empSeatsMin;

  public static final String SERIALIZED_NAME_EMP_SHOW_MINUTES = "empShowMinutes";
  @SerializedName(SERIALIZED_NAME_EMP_SHOW_MINUTES)
  private Integer empShowMinutes;

  public static final String SERIALIZED_NAME_EMP_SHOW_MINUTES_SEATS_MIN = "empShowMinutesSeatsMin";
  @SerializedName(SERIALIZED_NAME_EMP_SHOW_MINUTES_SEATS_MIN)
  private Integer empShowMinutesSeatsMin;

  public static final String SERIALIZED_NAME_PARTNER_EVENT = "partnerEvent";
  @SerializedName(SERIALIZED_NAME_PARTNER_EVENT)
  private Boolean partnerEvent;

  public static final String SERIALIZED_NAME_EN_TAX_CODE = "enTaxCode";
  @SerializedName(SERIALIZED_NAME_EN_TAX_CODE)
  private String enTaxCode;

  public static final String SERIALIZED_NAME_EVENT_LOGO_URL = "eventLogoUrl";
  @SerializedName(SERIALIZED_NAME_EVENT_LOGO_URL)
  private String eventLogoUrl;

  public static final String SERIALIZED_NAME_TXN_CHARGE = "txnCharge";
  @SerializedName(SERIALIZED_NAME_TXN_CHARGE)
  private Boolean txnCharge;

  public static final String SERIALIZED_NAME_ALLOW_GROUP_DISC = "allowGroupDisc";
  @SerializedName(SERIALIZED_NAME_ALLOW_GROUP_DISC)
  private Boolean allowGroupDisc;

  public static final String SERIALIZED_NAME_SORT_SEQUENCE = "sortSequence";
  @SerializedName(SERIALIZED_NAME_SORT_SEQUENCE)
  private Integer sortSequence;

  public static final String SERIALIZED_NAME_SCHEDULE = "schedule";
  @SerializedName(SERIALIZED_NAME_SCHEDULE)
  private List<Schedule> schedule = null;

  public static final String SERIALIZED_NAME_SHOW_TRACKING_DETAILS = "showTrackingDetails";
  @SerializedName(SERIALIZED_NAME_SHOW_TRACKING_DETAILS)
  private List<ShowTrackingDetail> showTrackingDetails = null;

  public static final String SERIALIZED_NAME_BUDGET = "budget";
  @SerializedName(SERIALIZED_NAME_BUDGET)
  private ShowBudget budget;

  public static final String SERIALIZED_NAME_ZONED_EVENT_END_DATE_TIME = "zonedEventEndDateTime";
  @SerializedName(SERIALIZED_NAME_ZONED_EVENT_END_DATE_TIME)
  private OffsetDateTime zonedEventEndDateTime;

  public static final String SERIALIZED_NAME_ZONED_EVENT_START_DATE_TIME = "zonedEventStartDateTime";
  @SerializedName(SERIALIZED_NAME_ZONED_EVENT_START_DATE_TIME)
  private OffsetDateTime zonedEventStartDateTime;

  public Event() { 
  }

  public Event eventCode(String eventCode) {
    
    this.eventCode = eventCode;
    return this;
  }

   /**
   * Get eventCode
   * @return eventCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEventCode() {
    return eventCode;
  }


  public void setEventCode(String eventCode) {
    this.eventCode = eventCode;
  }


  public Event eventName(String eventName) {
    
    this.eventName = eventName;
    return this;
  }

   /**
   * Get eventName
   * @return eventName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEventName() {
    return eventName;
  }


  public void setEventName(String eventName) {
    this.eventName = eventName;
  }


  public Event itemType(ItemType itemType) {
    
    this.itemType = itemType;
    return this;
  }

   /**
   * Get itemType
   * @return itemType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemType getItemType() {
    return itemType;
  }


  public void setItemType(ItemType itemType) {
    this.itemType = itemType;
  }


  public Event eventTimeMinutes(Integer eventTimeMinutes) {
    
    this.eventTimeMinutes = eventTimeMinutes;
    return this;
  }

   /**
   * Get eventTimeMinutes
   * @return eventTimeMinutes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getEventTimeMinutes() {
    return eventTimeMinutes;
  }


  public void setEventTimeMinutes(Integer eventTimeMinutes) {
    this.eventTimeMinutes = eventTimeMinutes;
  }


  public Event ticketed(Boolean ticketed) {
    
    this.ticketed = ticketed;
    return this;
  }

   /**
   * Get ticketed
   * @return ticketed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getTicketed() {
    return ticketed;
  }


  public void setTicketed(Boolean ticketed) {
    this.ticketed = ticketed;
  }


  public Event ticketStyleCode(String ticketStyleCode) {
    
    this.ticketStyleCode = ticketStyleCode;
    return this;
  }

   /**
   * Get ticketStyleCode
   * @return ticketStyleCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTicketStyleCode() {
    return ticketStyleCode;
  }


  public void setTicketStyleCode(String ticketStyleCode) {
    this.ticketStyleCode = ticketStyleCode;
  }


  public Event locationCode(String locationCode) {
    
    this.locationCode = locationCode;
    return this;
  }

   /**
   * Get locationCode
   * @return locationCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocationCode() {
    return locationCode;
  }


  public void setLocationCode(String locationCode) {
    this.locationCode = locationCode;
  }


  public Event seatingTemplateCode(String seatingTemplateCode) {
    
    this.seatingTemplateCode = seatingTemplateCode;
    return this;
  }

   /**
   * Get seatingTemplateCode
   * @return seatingTemplateCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSeatingTemplateCode() {
    return seatingTemplateCode;
  }


  public void setSeatingTemplateCode(String seatingTemplateCode) {
    this.seatingTemplateCode = seatingTemplateCode;
  }


  public Event eventDisplayColor(String eventDisplayColor) {
    
    this.eventDisplayColor = eventDisplayColor;
    return this;
  }

   /**
   * Get eventDisplayColor
   * @return eventDisplayColor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEventDisplayColor() {
    return eventDisplayColor;
  }


  public void setEventDisplayColor(String eventDisplayColor) {
    this.eventDisplayColor = eventDisplayColor;
  }


  public Event allowOrderTix(Boolean allowOrderTix) {
    
    this.allowOrderTix = allowOrderTix;
    return this;
  }

   /**
   * Get allowOrderTix
   * @return allowOrderTix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowOrderTix() {
    return allowOrderTix;
  }


  public void setAllowOrderTix(Boolean allowOrderTix) {
    this.allowOrderTix = allowOrderTix;
  }


  public Event internetSeatsMinimumLimit(Integer internetSeatsMinimumLimit) {
    
    this.internetSeatsMinimumLimit = internetSeatsMinimumLimit;
    return this;
  }

   /**
   * Get internetSeatsMinimumLimit
   * @return internetSeatsMinimumLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getInternetSeatsMinimumLimit() {
    return internetSeatsMinimumLimit;
  }


  public void setInternetSeatsMinimumLimit(Integer internetSeatsMinimumLimit) {
    this.internetSeatsMinimumLimit = internetSeatsMinimumLimit;
  }


  public Event eventStartDate(OffsetDateTime eventStartDate) {
    
    this.eventStartDate = eventStartDate;
    return this;
  }

   /**
   * Get eventStartDate
   * @return eventStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEventStartDate() {
    return eventStartDate;
  }


  public void setEventStartDate(OffsetDateTime eventStartDate) {
    this.eventStartDate = eventStartDate;
  }


  public Event eventEndDate(OffsetDateTime eventEndDate) {
    
    this.eventEndDate = eventEndDate;
    return this;
  }

   /**
   * Get eventEndDate
   * @return eventEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEventEndDate() {
    return eventEndDate;
  }


  public void setEventEndDate(OffsetDateTime eventEndDate) {
    this.eventEndDate = eventEndDate;
  }


  public Event active(Boolean active) {
    
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getActive() {
    return active;
  }


  public void setActive(Boolean active) {
    this.active = active;
  }


  public Event eventTypeDetailCode(String eventTypeDetailCode) {
    
    this.eventTypeDetailCode = eventTypeDetailCode;
    return this;
  }

   /**
   * Get eventTypeDetailCode
   * @return eventTypeDetailCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEventTypeDetailCode() {
    return eventTypeDetailCode;
  }


  public void setEventTypeDetailCode(String eventTypeDetailCode) {
    this.eventTypeDetailCode = eventTypeDetailCode;
  }


  public Event compTicketsSeatsMin(Integer compTicketsSeatsMin) {
    
    this.compTicketsSeatsMin = compTicketsSeatsMin;
    return this;
  }

   /**
   * Get compTicketsSeatsMin
   * @return compTicketsSeatsMin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCompTicketsSeatsMin() {
    return compTicketsSeatsMin;
  }


  public void setCompTicketsSeatsMin(Integer compTicketsSeatsMin) {
    this.compTicketsSeatsMin = compTicketsSeatsMin;
  }


  public Event compTicketsStartDate(OffsetDateTime compTicketsStartDate) {
    
    this.compTicketsStartDate = compTicketsStartDate;
    return this;
  }

   /**
   * Get compTicketsStartDate
   * @return compTicketsStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCompTicketsStartDate() {
    return compTicketsStartDate;
  }


  public void setCompTicketsStartDate(OffsetDateTime compTicketsStartDate) {
    this.compTicketsStartDate = compTicketsStartDate;
  }


  public Event theaterLocation(LocationDescription theaterLocation) {
    
    this.theaterLocation = theaterLocation;
    return this;
  }

   /**
   * Get theaterLocation
   * @return theaterLocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocationDescription getTheaterLocation() {
    return theaterLocation;
  }


  public void setTheaterLocation(LocationDescription theaterLocation) {
    this.theaterLocation = theaterLocation;
  }


  public Event empDiscDaysToShow(Integer empDiscDaysToShow) {
    
    this.empDiscDaysToShow = empDiscDaysToShow;
    return this;
  }

   /**
   * Get empDiscDaysToShow
   * @return empDiscDaysToShow
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getEmpDiscDaysToShow() {
    return empDiscDaysToShow;
  }


  public void setEmpDiscDaysToShow(Integer empDiscDaysToShow) {
    this.empDiscDaysToShow = empDiscDaysToShow;
  }


  public Event empDiscPercent(BigDecimal empDiscPercent) {
    
    this.empDiscPercent = empDiscPercent;
    return this;
  }

   /**
   * Get empDiscPercent
   * @return empDiscPercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getEmpDiscPercent() {
    return empDiscPercent;
  }


  public void setEmpDiscPercent(BigDecimal empDiscPercent) {
    this.empDiscPercent = empDiscPercent;
  }


  public Event taxCode(String taxCode) {
    
    this.taxCode = taxCode;
    return this;
  }

   /**
   * Get taxCode
   * @return taxCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTaxCode() {
    return taxCode;
  }


  public void setTaxCode(String taxCode) {
    this.taxCode = taxCode;
  }


  public Event externalBooking(Boolean externalBooking) {
    
    this.externalBooking = externalBooking;
    return this;
  }

   /**
   * Get externalBooking
   * @return externalBooking
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getExternalBooking() {
    return externalBooking;
  }


  public void setExternalBooking(Boolean externalBooking) {
    this.externalBooking = externalBooking;
  }


  public Event externalBookingThreshold(Integer externalBookingThreshold) {
    
    this.externalBookingThreshold = externalBookingThreshold;
    return this;
  }

   /**
   * Get externalBookingThreshold
   * @return externalBookingThreshold
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getExternalBookingThreshold() {
    return externalBookingThreshold;
  }


  public void setExternalBookingThreshold(Integer externalBookingThreshold) {
    this.externalBookingThreshold = externalBookingThreshold;
  }


  public Event compTicketsMax(Integer compTicketsMax) {
    
    this.compTicketsMax = compTicketsMax;
    return this;
  }

   /**
   * Get compTicketsMax
   * @return compTicketsMax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCompTicketsMax() {
    return compTicketsMax;
  }


  public void setCompTicketsMax(Integer compTicketsMax) {
    this.compTicketsMax = compTicketsMax;
  }


  public Event empDayTicketsMax(Integer empDayTicketsMax) {
    
    this.empDayTicketsMax = empDayTicketsMax;
    return this;
  }

   /**
   * Get empDayTicketsMax
   * @return empDayTicketsMax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getEmpDayTicketsMax() {
    return empDayTicketsMax;
  }


  public void setEmpDayTicketsMax(Integer empDayTicketsMax) {
    this.empDayTicketsMax = empDayTicketsMax;
  }


  public Event premierShow(Boolean premierShow) {
    
    this.premierShow = premierShow;
    return this;
  }

   /**
   * Get premierShow
   * @return premierShow
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getPremierShow() {
    return premierShow;
  }


  public void setPremierShow(Boolean premierShow) {
    this.premierShow = premierShow;
  }


  public Event taxable(Boolean taxable) {
    
    this.taxable = taxable;
    return this;
  }

   /**
   * Get taxable
   * @return taxable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getTaxable() {
    return taxable;
  }


  public void setTaxable(Boolean taxable) {
    this.taxable = taxable;
  }


  public Event allowGroup(Boolean allowGroup) {
    
    this.allowGroup = allowGroup;
    return this;
  }

   /**
   * Get allowGroup
   * @return allowGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowGroup() {
    return allowGroup;
  }


  public void setAllowGroup(Boolean allowGroup) {
    this.allowGroup = allowGroup;
  }


  public Event empSeatsMin(Integer empSeatsMin) {
    
    this.empSeatsMin = empSeatsMin;
    return this;
  }

   /**
   * Get empSeatsMin
   * @return empSeatsMin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getEmpSeatsMin() {
    return empSeatsMin;
  }


  public void setEmpSeatsMin(Integer empSeatsMin) {
    this.empSeatsMin = empSeatsMin;
  }


  public Event empShowMinutes(Integer empShowMinutes) {
    
    this.empShowMinutes = empShowMinutes;
    return this;
  }

   /**
   * Get empShowMinutes
   * @return empShowMinutes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getEmpShowMinutes() {
    return empShowMinutes;
  }


  public void setEmpShowMinutes(Integer empShowMinutes) {
    this.empShowMinutes = empShowMinutes;
  }


  public Event empShowMinutesSeatsMin(Integer empShowMinutesSeatsMin) {
    
    this.empShowMinutesSeatsMin = empShowMinutesSeatsMin;
    return this;
  }

   /**
   * Get empShowMinutesSeatsMin
   * @return empShowMinutesSeatsMin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getEmpShowMinutesSeatsMin() {
    return empShowMinutesSeatsMin;
  }


  public void setEmpShowMinutesSeatsMin(Integer empShowMinutesSeatsMin) {
    this.empShowMinutesSeatsMin = empShowMinutesSeatsMin;
  }


  public Event partnerEvent(Boolean partnerEvent) {
    
    this.partnerEvent = partnerEvent;
    return this;
  }

   /**
   * Get partnerEvent
   * @return partnerEvent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getPartnerEvent() {
    return partnerEvent;
  }


  public void setPartnerEvent(Boolean partnerEvent) {
    this.partnerEvent = partnerEvent;
  }


  public Event enTaxCode(String enTaxCode) {
    
    this.enTaxCode = enTaxCode;
    return this;
  }

   /**
   * Get enTaxCode
   * @return enTaxCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEnTaxCode() {
    return enTaxCode;
  }


  public void setEnTaxCode(String enTaxCode) {
    this.enTaxCode = enTaxCode;
  }


  public Event eventLogoUrl(String eventLogoUrl) {
    
    this.eventLogoUrl = eventLogoUrl;
    return this;
  }

   /**
   * Get eventLogoUrl
   * @return eventLogoUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEventLogoUrl() {
    return eventLogoUrl;
  }


  public void setEventLogoUrl(String eventLogoUrl) {
    this.eventLogoUrl = eventLogoUrl;
  }


  public Event txnCharge(Boolean txnCharge) {
    
    this.txnCharge = txnCharge;
    return this;
  }

   /**
   * Get txnCharge
   * @return txnCharge
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getTxnCharge() {
    return txnCharge;
  }


  public void setTxnCharge(Boolean txnCharge) {
    this.txnCharge = txnCharge;
  }


  public Event allowGroupDisc(Boolean allowGroupDisc) {
    
    this.allowGroupDisc = allowGroupDisc;
    return this;
  }

   /**
   * Get allowGroupDisc
   * @return allowGroupDisc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowGroupDisc() {
    return allowGroupDisc;
  }


  public void setAllowGroupDisc(Boolean allowGroupDisc) {
    this.allowGroupDisc = allowGroupDisc;
  }


  public Event sortSequence(Integer sortSequence) {
    
    this.sortSequence = sortSequence;
    return this;
  }

   /**
   * Get sortSequence
   * @return sortSequence
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSortSequence() {
    return sortSequence;
  }


  public void setSortSequence(Integer sortSequence) {
    this.sortSequence = sortSequence;
  }


  public Event schedule(List<Schedule> schedule) {
    
    this.schedule = schedule;
    return this;
  }

  public Event addScheduleItem(Schedule scheduleItem) {
    if (this.schedule == null) {
      this.schedule = new ArrayList<>();
    }
    this.schedule.add(scheduleItem);
    return this;
  }

   /**
   * Get schedule
   * @return schedule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Schedule> getSchedule() {
    return schedule;
  }


  public void setSchedule(List<Schedule> schedule) {
    this.schedule = schedule;
  }


  public Event showTrackingDetails(List<ShowTrackingDetail> showTrackingDetails) {
    
    this.showTrackingDetails = showTrackingDetails;
    return this;
  }

  public Event addShowTrackingDetailsItem(ShowTrackingDetail showTrackingDetailsItem) {
    if (this.showTrackingDetails == null) {
      this.showTrackingDetails = new ArrayList<>();
    }
    this.showTrackingDetails.add(showTrackingDetailsItem);
    return this;
  }

   /**
   * Get showTrackingDetails
   * @return showTrackingDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ShowTrackingDetail> getShowTrackingDetails() {
    return showTrackingDetails;
  }


  public void setShowTrackingDetails(List<ShowTrackingDetail> showTrackingDetails) {
    this.showTrackingDetails = showTrackingDetails;
  }


  public Event budget(ShowBudget budget) {
    
    this.budget = budget;
    return this;
  }

   /**
   * Get budget
   * @return budget
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ShowBudget getBudget() {
    return budget;
  }


  public void setBudget(ShowBudget budget) {
    this.budget = budget;
  }


  public Event zonedEventEndDateTime(OffsetDateTime zonedEventEndDateTime) {
    
    this.zonedEventEndDateTime = zonedEventEndDateTime;
    return this;
  }

   /**
   * Get zonedEventEndDateTime
   * @return zonedEventEndDateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getZonedEventEndDateTime() {
    return zonedEventEndDateTime;
  }


  public void setZonedEventEndDateTime(OffsetDateTime zonedEventEndDateTime) {
    this.zonedEventEndDateTime = zonedEventEndDateTime;
  }


  public Event zonedEventStartDateTime(OffsetDateTime zonedEventStartDateTime) {
    
    this.zonedEventStartDateTime = zonedEventStartDateTime;
    return this;
  }

   /**
   * Get zonedEventStartDateTime
   * @return zonedEventStartDateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getZonedEventStartDateTime() {
    return zonedEventStartDateTime;
  }


  public void setZonedEventStartDateTime(OffsetDateTime zonedEventStartDateTime) {
    this.zonedEventStartDateTime = zonedEventStartDateTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Event event = (Event) o;
    return Objects.equals(this.eventCode, event.eventCode) &&
        Objects.equals(this.eventName, event.eventName) &&
        Objects.equals(this.itemType, event.itemType) &&
        Objects.equals(this.eventTimeMinutes, event.eventTimeMinutes) &&
        Objects.equals(this.ticketed, event.ticketed) &&
        Objects.equals(this.ticketStyleCode, event.ticketStyleCode) &&
        Objects.equals(this.locationCode, event.locationCode) &&
        Objects.equals(this.seatingTemplateCode, event.seatingTemplateCode) &&
        Objects.equals(this.eventDisplayColor, event.eventDisplayColor) &&
        Objects.equals(this.allowOrderTix, event.allowOrderTix) &&
        Objects.equals(this.internetSeatsMinimumLimit, event.internetSeatsMinimumLimit) &&
        Objects.equals(this.eventStartDate, event.eventStartDate) &&
        Objects.equals(this.eventEndDate, event.eventEndDate) &&
        Objects.equals(this.active, event.active) &&
        Objects.equals(this.eventTypeDetailCode, event.eventTypeDetailCode) &&
        Objects.equals(this.compTicketsSeatsMin, event.compTicketsSeatsMin) &&
        Objects.equals(this.compTicketsStartDate, event.compTicketsStartDate) &&
        Objects.equals(this.theaterLocation, event.theaterLocation) &&
        Objects.equals(this.empDiscDaysToShow, event.empDiscDaysToShow) &&
        Objects.equals(this.empDiscPercent, event.empDiscPercent) &&
        Objects.equals(this.taxCode, event.taxCode) &&
        Objects.equals(this.externalBooking, event.externalBooking) &&
        Objects.equals(this.externalBookingThreshold, event.externalBookingThreshold) &&
        Objects.equals(this.compTicketsMax, event.compTicketsMax) &&
        Objects.equals(this.empDayTicketsMax, event.empDayTicketsMax) &&
        Objects.equals(this.premierShow, event.premierShow) &&
        Objects.equals(this.taxable, event.taxable) &&
        Objects.equals(this.allowGroup, event.allowGroup) &&
        Objects.equals(this.empSeatsMin, event.empSeatsMin) &&
        Objects.equals(this.empShowMinutes, event.empShowMinutes) &&
        Objects.equals(this.empShowMinutesSeatsMin, event.empShowMinutesSeatsMin) &&
        Objects.equals(this.partnerEvent, event.partnerEvent) &&
        Objects.equals(this.enTaxCode, event.enTaxCode) &&
        Objects.equals(this.eventLogoUrl, event.eventLogoUrl) &&
        Objects.equals(this.txnCharge, event.txnCharge) &&
        Objects.equals(this.allowGroupDisc, event.allowGroupDisc) &&
        Objects.equals(this.sortSequence, event.sortSequence) &&
        Objects.equals(this.schedule, event.schedule) &&
        Objects.equals(this.showTrackingDetails, event.showTrackingDetails) &&
        Objects.equals(this.budget, event.budget) &&
        Objects.equals(this.zonedEventEndDateTime, event.zonedEventEndDateTime) &&
        Objects.equals(this.zonedEventStartDateTime, event.zonedEventStartDateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventCode, eventName, itemType, eventTimeMinutes, ticketed, ticketStyleCode, locationCode, seatingTemplateCode, eventDisplayColor, allowOrderTix, internetSeatsMinimumLimit, eventStartDate, eventEndDate, active, eventTypeDetailCode, compTicketsSeatsMin, compTicketsStartDate, theaterLocation, empDiscDaysToShow, empDiscPercent, taxCode, externalBooking, externalBookingThreshold, compTicketsMax, empDayTicketsMax, premierShow, taxable, allowGroup, empSeatsMin, empShowMinutes, empShowMinutesSeatsMin, partnerEvent, enTaxCode, eventLogoUrl, txnCharge, allowGroupDisc, sortSequence, schedule, showTrackingDetails, budget, zonedEventEndDateTime, zonedEventStartDateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Event {\n");
    sb.append("    eventCode: ").append(toIndentedString(eventCode)).append("\n");
    sb.append("    eventName: ").append(toIndentedString(eventName)).append("\n");
    sb.append("    itemType: ").append(toIndentedString(itemType)).append("\n");
    sb.append("    eventTimeMinutes: ").append(toIndentedString(eventTimeMinutes)).append("\n");
    sb.append("    ticketed: ").append(toIndentedString(ticketed)).append("\n");
    sb.append("    ticketStyleCode: ").append(toIndentedString(ticketStyleCode)).append("\n");
    sb.append("    locationCode: ").append(toIndentedString(locationCode)).append("\n");
    sb.append("    seatingTemplateCode: ").append(toIndentedString(seatingTemplateCode)).append("\n");
    sb.append("    eventDisplayColor: ").append(toIndentedString(eventDisplayColor)).append("\n");
    sb.append("    allowOrderTix: ").append(toIndentedString(allowOrderTix)).append("\n");
    sb.append("    internetSeatsMinimumLimit: ").append(toIndentedString(internetSeatsMinimumLimit)).append("\n");
    sb.append("    eventStartDate: ").append(toIndentedString(eventStartDate)).append("\n");
    sb.append("    eventEndDate: ").append(toIndentedString(eventEndDate)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    eventTypeDetailCode: ").append(toIndentedString(eventTypeDetailCode)).append("\n");
    sb.append("    compTicketsSeatsMin: ").append(toIndentedString(compTicketsSeatsMin)).append("\n");
    sb.append("    compTicketsStartDate: ").append(toIndentedString(compTicketsStartDate)).append("\n");
    sb.append("    theaterLocation: ").append(toIndentedString(theaterLocation)).append("\n");
    sb.append("    empDiscDaysToShow: ").append(toIndentedString(empDiscDaysToShow)).append("\n");
    sb.append("    empDiscPercent: ").append(toIndentedString(empDiscPercent)).append("\n");
    sb.append("    taxCode: ").append(toIndentedString(taxCode)).append("\n");
    sb.append("    externalBooking: ").append(toIndentedString(externalBooking)).append("\n");
    sb.append("    externalBookingThreshold: ").append(toIndentedString(externalBookingThreshold)).append("\n");
    sb.append("    compTicketsMax: ").append(toIndentedString(compTicketsMax)).append("\n");
    sb.append("    empDayTicketsMax: ").append(toIndentedString(empDayTicketsMax)).append("\n");
    sb.append("    premierShow: ").append(toIndentedString(premierShow)).append("\n");
    sb.append("    taxable: ").append(toIndentedString(taxable)).append("\n");
    sb.append("    allowGroup: ").append(toIndentedString(allowGroup)).append("\n");
    sb.append("    empSeatsMin: ").append(toIndentedString(empSeatsMin)).append("\n");
    sb.append("    empShowMinutes: ").append(toIndentedString(empShowMinutes)).append("\n");
    sb.append("    empShowMinutesSeatsMin: ").append(toIndentedString(empShowMinutesSeatsMin)).append("\n");
    sb.append("    partnerEvent: ").append(toIndentedString(partnerEvent)).append("\n");
    sb.append("    enTaxCode: ").append(toIndentedString(enTaxCode)).append("\n");
    sb.append("    eventLogoUrl: ").append(toIndentedString(eventLogoUrl)).append("\n");
    sb.append("    txnCharge: ").append(toIndentedString(txnCharge)).append("\n");
    sb.append("    allowGroupDisc: ").append(toIndentedString(allowGroupDisc)).append("\n");
    sb.append("    sortSequence: ").append(toIndentedString(sortSequence)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    showTrackingDetails: ").append(toIndentedString(showTrackingDetails)).append("\n");
    sb.append("    budget: ").append(toIndentedString(budget)).append("\n");
    sb.append("    zonedEventEndDateTime: ").append(toIndentedString(zonedEventEndDateTime)).append("\n");
    sb.append("    zonedEventStartDateTime: ").append(toIndentedString(zonedEventStartDateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("eventCode");
    openapiFields.add("eventName");
    openapiFields.add("itemType");
    openapiFields.add("eventTimeMinutes");
    openapiFields.add("ticketed");
    openapiFields.add("ticketStyleCode");
    openapiFields.add("locationCode");
    openapiFields.add("seatingTemplateCode");
    openapiFields.add("eventDisplayColor");
    openapiFields.add("allowOrderTix");
    openapiFields.add("internetSeatsMinimumLimit");
    openapiFields.add("eventStartDate");
    openapiFields.add("eventEndDate");
    openapiFields.add("active");
    openapiFields.add("eventTypeDetailCode");
    openapiFields.add("compTicketsSeatsMin");
    openapiFields.add("compTicketsStartDate");
    openapiFields.add("theaterLocation");
    openapiFields.add("empDiscDaysToShow");
    openapiFields.add("empDiscPercent");
    openapiFields.add("taxCode");
    openapiFields.add("externalBooking");
    openapiFields.add("externalBookingThreshold");
    openapiFields.add("compTicketsMax");
    openapiFields.add("empDayTicketsMax");
    openapiFields.add("premierShow");
    openapiFields.add("taxable");
    openapiFields.add("allowGroup");
    openapiFields.add("empSeatsMin");
    openapiFields.add("empShowMinutes");
    openapiFields.add("empShowMinutesSeatsMin");
    openapiFields.add("partnerEvent");
    openapiFields.add("enTaxCode");
    openapiFields.add("eventLogoUrl");
    openapiFields.add("txnCharge");
    openapiFields.add("allowGroupDisc");
    openapiFields.add("sortSequence");
    openapiFields.add("schedule");
    openapiFields.add("showTrackingDetails");
    openapiFields.add("budget");
    openapiFields.add("zonedEventEndDateTime");
    openapiFields.add("zonedEventStartDateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Event
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (Event.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in Event is not found in the empty JSON string", Event.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!Event.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Event` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("eventCode") != null && !jsonObj.get("eventCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eventCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eventCode").toString()));
      }
      if (jsonObj.get("eventName") != null && !jsonObj.get("eventName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eventName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eventName").toString()));
      }
      if (jsonObj.get("ticketStyleCode") != null && !jsonObj.get("ticketStyleCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ticketStyleCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ticketStyleCode").toString()));
      }
      if (jsonObj.get("locationCode") != null && !jsonObj.get("locationCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locationCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locationCode").toString()));
      }
      if (jsonObj.get("seatingTemplateCode") != null && !jsonObj.get("seatingTemplateCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `seatingTemplateCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("seatingTemplateCode").toString()));
      }
      if (jsonObj.get("eventDisplayColor") != null && !jsonObj.get("eventDisplayColor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eventDisplayColor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eventDisplayColor").toString()));
      }
      if (jsonObj.get("eventTypeDetailCode") != null && !jsonObj.get("eventTypeDetailCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eventTypeDetailCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eventTypeDetailCode").toString()));
      }
      if (jsonObj.get("taxCode") != null && !jsonObj.get("taxCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxCode").toString()));
      }
      if (jsonObj.get("enTaxCode") != null && !jsonObj.get("enTaxCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enTaxCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enTaxCode").toString()));
      }
      if (jsonObj.get("eventLogoUrl") != null && !jsonObj.get("eventLogoUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eventLogoUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eventLogoUrl").toString()));
      }
      JsonArray jsonArrayschedule = jsonObj.getAsJsonArray("schedule");
      if (jsonArrayschedule != null) {
        // ensure the json data is an array
        if (!jsonObj.get("schedule").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `schedule` to be an array in the JSON string but got `%s`", jsonObj.get("schedule").toString()));
        }

        // validate the optional field `schedule` (array)
        for (int i = 0; i < jsonArrayschedule.size(); i++) {
          Schedule.validateJsonObject(jsonArrayschedule.get(i).getAsJsonObject());
        };
      }
      JsonArray jsonArrayshowTrackingDetails = jsonObj.getAsJsonArray("showTrackingDetails");
      if (jsonArrayshowTrackingDetails != null) {
        // ensure the json data is an array
        if (!jsonObj.get("showTrackingDetails").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `showTrackingDetails` to be an array in the JSON string but got `%s`", jsonObj.get("showTrackingDetails").toString()));
        }

        // validate the optional field `showTrackingDetails` (array)
        for (int i = 0; i < jsonArrayshowTrackingDetails.size(); i++) {
          ShowTrackingDetail.validateJsonObject(jsonArrayshowTrackingDetails.get(i).getAsJsonObject());
        };
      }
      // validate the optional field `budget`
      if (jsonObj.getAsJsonObject("budget") != null) {
        ShowBudget.validateJsonObject(jsonObj.getAsJsonObject("budget"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Event.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Event' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Event> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Event.class));

       return (TypeAdapter<T>) new TypeAdapter<Event>() {
           @Override
           public void write(JsonWriter out, Event value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Event read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Event given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Event
  * @throws IOException if the JSON string is invalid with respect to Event
  */
  public static Event fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Event.class);
  }

 /**
  * Convert an instance of Event to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

