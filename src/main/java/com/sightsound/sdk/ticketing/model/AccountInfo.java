/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sightsound.sdk.ticketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.sightsound.sdk.ticketing.model.AccountAgeIndicatorEnum;
import com.sightsound.sdk.ticketing.model.AccountChangeIndicatorEnum;
import com.sightsound.sdk.ticketing.model.AccountTypeEnum;
import com.sightsound.sdk.ticketing.model.DeliveryAddressUsageIndicatorEnum;
import com.sightsound.sdk.ticketing.model.PasswordChangeIndicatorEnum;
import com.sightsound.sdk.ticketing.model.PaymentAccountIndicatorEnum;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.sightsound.sdk.ticketing.JSON;

/**
 * AccountInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-30T16:06:07.372728-05:00[America/Chicago]")
public class AccountInfo {
  public static final String SERIALIZED_NAME_ACCOUNT_AGE_INDICATOR = "accountAgeIndicator";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_AGE_INDICATOR)
  private AccountAgeIndicatorEnum accountAgeIndicator;

  public static final String SERIALIZED_NAME_ACCOUNT_CHANGE_DATE = "accountChangeDate";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_CHANGE_DATE)
  private OffsetDateTime accountChangeDate;

  public static final String SERIALIZED_NAME_ACCOUNT_CHANGE_INDICATOR = "accountChangeIndicator";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_CHANGE_INDICATOR)
  private AccountChangeIndicatorEnum accountChangeIndicator;

  public static final String SERIALIZED_NAME_ACCOUNT_CREATION_DATE = "accountCreationDate";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_CREATION_DATE)
  private OffsetDateTime accountCreationDate;

  public static final String SERIALIZED_NAME_ACCOUNT_TYPE = "accountType";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_TYPE)
  private AccountTypeEnum accountType;

  public static final String SERIALIZED_NAME_ADD_CARD_ATTEMPTS_DAY = "addCardAttemptsDay";
  @SerializedName(SERIALIZED_NAME_ADD_CARD_ATTEMPTS_DAY)
  private Integer addCardAttemptsDay;

  public static final String SERIALIZED_NAME_DELIVERY_ADDRESS_USAGE_DATE = "deliveryAddressUsageDate";
  @SerializedName(SERIALIZED_NAME_DELIVERY_ADDRESS_USAGE_DATE)
  private OffsetDateTime deliveryAddressUsageDate;

  public static final String SERIALIZED_NAME_DELIVERY_ADDRESS_USAGE_INDICATOR = "deliveryAddressUsageIndicator";
  @SerializedName(SERIALIZED_NAME_DELIVERY_ADDRESS_USAGE_INDICATOR)
  private DeliveryAddressUsageIndicatorEnum deliveryAddressUsageIndicator;

  public static final String SERIALIZED_NAME_HOME_PHONE = "homePhone";
  @SerializedName(SERIALIZED_NAME_HOME_PHONE)
  private String homePhone;

  public static final String SERIALIZED_NAME_MOBILE_PHONE = "mobilePhone";
  @SerializedName(SERIALIZED_NAME_MOBILE_PHONE)
  private String mobilePhone;

  public static final String SERIALIZED_NAME_PASSWORD_CHANGE_DATE = "passwordChangeDate";
  @SerializedName(SERIALIZED_NAME_PASSWORD_CHANGE_DATE)
  private OffsetDateTime passwordChangeDate;

  public static final String SERIALIZED_NAME_PASSWORD_CHANGE_INDICATOR = "passwordChangeIndicator";
  @SerializedName(SERIALIZED_NAME_PASSWORD_CHANGE_INDICATOR)
  private PasswordChangeIndicatorEnum passwordChangeIndicator;

  public static final String SERIALIZED_NAME_PAST_TRANSACTIONS_DAY = "pastTransactionsDay";
  @SerializedName(SERIALIZED_NAME_PAST_TRANSACTIONS_DAY)
  private Integer pastTransactionsDay;

  public static final String SERIALIZED_NAME_PAST_TRANSACTIONS_YEAR = "pastTransactionsYear";
  @SerializedName(SERIALIZED_NAME_PAST_TRANSACTIONS_YEAR)
  private Integer pastTransactionsYear;

  public static final String SERIALIZED_NAME_PAYMENT_ACCOUNT_AGE = "paymentAccountAge";
  @SerializedName(SERIALIZED_NAME_PAYMENT_ACCOUNT_AGE)
  private OffsetDateTime paymentAccountAge;

  public static final String SERIALIZED_NAME_PAYMENT_ACCOUNT_INDICATOR = "paymentAccountIndicator";
  @SerializedName(SERIALIZED_NAME_PAYMENT_ACCOUNT_INDICATOR)
  private PaymentAccountIndicatorEnum paymentAccountIndicator;

  public static final String SERIALIZED_NAME_PURCHASES_LAST6_MONTHS = "purchasesLast6Months";
  @SerializedName(SERIALIZED_NAME_PURCHASES_LAST6_MONTHS)
  private Integer purchasesLast6Months;

  public static final String SERIALIZED_NAME_SUSPICIOUS_ACTIVITY = "suspiciousActivity";
  @SerializedName(SERIALIZED_NAME_SUSPICIOUS_ACTIVITY)
  private Boolean suspiciousActivity;

  public static final String SERIALIZED_NAME_WORK_PHONE = "workPhone";
  @SerializedName(SERIALIZED_NAME_WORK_PHONE)
  private String workPhone;

  public AccountInfo() { 
  }

  public AccountInfo accountAgeIndicator(AccountAgeIndicatorEnum accountAgeIndicator) {
    
    this.accountAgeIndicator = accountAgeIndicator;
    return this;
  }

   /**
   * Get accountAgeIndicator
   * @return accountAgeIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AccountAgeIndicatorEnum getAccountAgeIndicator() {
    return accountAgeIndicator;
  }


  public void setAccountAgeIndicator(AccountAgeIndicatorEnum accountAgeIndicator) {
    this.accountAgeIndicator = accountAgeIndicator;
  }


  public AccountInfo accountChangeDate(OffsetDateTime accountChangeDate) {
    
    this.accountChangeDate = accountChangeDate;
    return this;
  }

   /**
   * Get accountChangeDate
   * @return accountChangeDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getAccountChangeDate() {
    return accountChangeDate;
  }


  public void setAccountChangeDate(OffsetDateTime accountChangeDate) {
    this.accountChangeDate = accountChangeDate;
  }


  public AccountInfo accountChangeIndicator(AccountChangeIndicatorEnum accountChangeIndicator) {
    
    this.accountChangeIndicator = accountChangeIndicator;
    return this;
  }

   /**
   * Get accountChangeIndicator
   * @return accountChangeIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AccountChangeIndicatorEnum getAccountChangeIndicator() {
    return accountChangeIndicator;
  }


  public void setAccountChangeIndicator(AccountChangeIndicatorEnum accountChangeIndicator) {
    this.accountChangeIndicator = accountChangeIndicator;
  }


  public AccountInfo accountCreationDate(OffsetDateTime accountCreationDate) {
    
    this.accountCreationDate = accountCreationDate;
    return this;
  }

   /**
   * Get accountCreationDate
   * @return accountCreationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getAccountCreationDate() {
    return accountCreationDate;
  }


  public void setAccountCreationDate(OffsetDateTime accountCreationDate) {
    this.accountCreationDate = accountCreationDate;
  }


  public AccountInfo accountType(AccountTypeEnum accountType) {
    
    this.accountType = accountType;
    return this;
  }

   /**
   * Get accountType
   * @return accountType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AccountTypeEnum getAccountType() {
    return accountType;
  }


  public void setAccountType(AccountTypeEnum accountType) {
    this.accountType = accountType;
  }


  public AccountInfo addCardAttemptsDay(Integer addCardAttemptsDay) {
    
    this.addCardAttemptsDay = addCardAttemptsDay;
    return this;
  }

   /**
   * Get addCardAttemptsDay
   * @return addCardAttemptsDay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAddCardAttemptsDay() {
    return addCardAttemptsDay;
  }


  public void setAddCardAttemptsDay(Integer addCardAttemptsDay) {
    this.addCardAttemptsDay = addCardAttemptsDay;
  }


  public AccountInfo deliveryAddressUsageDate(OffsetDateTime deliveryAddressUsageDate) {
    
    this.deliveryAddressUsageDate = deliveryAddressUsageDate;
    return this;
  }

   /**
   * Get deliveryAddressUsageDate
   * @return deliveryAddressUsageDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDeliveryAddressUsageDate() {
    return deliveryAddressUsageDate;
  }


  public void setDeliveryAddressUsageDate(OffsetDateTime deliveryAddressUsageDate) {
    this.deliveryAddressUsageDate = deliveryAddressUsageDate;
  }


  public AccountInfo deliveryAddressUsageIndicator(DeliveryAddressUsageIndicatorEnum deliveryAddressUsageIndicator) {
    
    this.deliveryAddressUsageIndicator = deliveryAddressUsageIndicator;
    return this;
  }

   /**
   * Get deliveryAddressUsageIndicator
   * @return deliveryAddressUsageIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DeliveryAddressUsageIndicatorEnum getDeliveryAddressUsageIndicator() {
    return deliveryAddressUsageIndicator;
  }


  public void setDeliveryAddressUsageIndicator(DeliveryAddressUsageIndicatorEnum deliveryAddressUsageIndicator) {
    this.deliveryAddressUsageIndicator = deliveryAddressUsageIndicator;
  }


  public AccountInfo homePhone(String homePhone) {
    
    this.homePhone = homePhone;
    return this;
  }

   /**
   * Get homePhone
   * @return homePhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHomePhone() {
    return homePhone;
  }


  public void setHomePhone(String homePhone) {
    this.homePhone = homePhone;
  }


  public AccountInfo mobilePhone(String mobilePhone) {
    
    this.mobilePhone = mobilePhone;
    return this;
  }

   /**
   * Get mobilePhone
   * @return mobilePhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMobilePhone() {
    return mobilePhone;
  }


  public void setMobilePhone(String mobilePhone) {
    this.mobilePhone = mobilePhone;
  }


  public AccountInfo passwordChangeDate(OffsetDateTime passwordChangeDate) {
    
    this.passwordChangeDate = passwordChangeDate;
    return this;
  }

   /**
   * Get passwordChangeDate
   * @return passwordChangeDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getPasswordChangeDate() {
    return passwordChangeDate;
  }


  public void setPasswordChangeDate(OffsetDateTime passwordChangeDate) {
    this.passwordChangeDate = passwordChangeDate;
  }


  public AccountInfo passwordChangeIndicator(PasswordChangeIndicatorEnum passwordChangeIndicator) {
    
    this.passwordChangeIndicator = passwordChangeIndicator;
    return this;
  }

   /**
   * Get passwordChangeIndicator
   * @return passwordChangeIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PasswordChangeIndicatorEnum getPasswordChangeIndicator() {
    return passwordChangeIndicator;
  }


  public void setPasswordChangeIndicator(PasswordChangeIndicatorEnum passwordChangeIndicator) {
    this.passwordChangeIndicator = passwordChangeIndicator;
  }


  public AccountInfo pastTransactionsDay(Integer pastTransactionsDay) {
    
    this.pastTransactionsDay = pastTransactionsDay;
    return this;
  }

   /**
   * Get pastTransactionsDay
   * @return pastTransactionsDay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPastTransactionsDay() {
    return pastTransactionsDay;
  }


  public void setPastTransactionsDay(Integer pastTransactionsDay) {
    this.pastTransactionsDay = pastTransactionsDay;
  }


  public AccountInfo pastTransactionsYear(Integer pastTransactionsYear) {
    
    this.pastTransactionsYear = pastTransactionsYear;
    return this;
  }

   /**
   * Get pastTransactionsYear
   * @return pastTransactionsYear
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPastTransactionsYear() {
    return pastTransactionsYear;
  }


  public void setPastTransactionsYear(Integer pastTransactionsYear) {
    this.pastTransactionsYear = pastTransactionsYear;
  }


  public AccountInfo paymentAccountAge(OffsetDateTime paymentAccountAge) {
    
    this.paymentAccountAge = paymentAccountAge;
    return this;
  }

   /**
   * Get paymentAccountAge
   * @return paymentAccountAge
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getPaymentAccountAge() {
    return paymentAccountAge;
  }


  public void setPaymentAccountAge(OffsetDateTime paymentAccountAge) {
    this.paymentAccountAge = paymentAccountAge;
  }


  public AccountInfo paymentAccountIndicator(PaymentAccountIndicatorEnum paymentAccountIndicator) {
    
    this.paymentAccountIndicator = paymentAccountIndicator;
    return this;
  }

   /**
   * Get paymentAccountIndicator
   * @return paymentAccountIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PaymentAccountIndicatorEnum getPaymentAccountIndicator() {
    return paymentAccountIndicator;
  }


  public void setPaymentAccountIndicator(PaymentAccountIndicatorEnum paymentAccountIndicator) {
    this.paymentAccountIndicator = paymentAccountIndicator;
  }


  public AccountInfo purchasesLast6Months(Integer purchasesLast6Months) {
    
    this.purchasesLast6Months = purchasesLast6Months;
    return this;
  }

   /**
   * Get purchasesLast6Months
   * @return purchasesLast6Months
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPurchasesLast6Months() {
    return purchasesLast6Months;
  }


  public void setPurchasesLast6Months(Integer purchasesLast6Months) {
    this.purchasesLast6Months = purchasesLast6Months;
  }


  public AccountInfo suspiciousActivity(Boolean suspiciousActivity) {
    
    this.suspiciousActivity = suspiciousActivity;
    return this;
  }

   /**
   * Get suspiciousActivity
   * @return suspiciousActivity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSuspiciousActivity() {
    return suspiciousActivity;
  }


  public void setSuspiciousActivity(Boolean suspiciousActivity) {
    this.suspiciousActivity = suspiciousActivity;
  }


  public AccountInfo workPhone(String workPhone) {
    
    this.workPhone = workPhone;
    return this;
  }

   /**
   * Get workPhone
   * @return workPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWorkPhone() {
    return workPhone;
  }


  public void setWorkPhone(String workPhone) {
    this.workPhone = workPhone;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountInfo accountInfo = (AccountInfo) o;
    return Objects.equals(this.accountAgeIndicator, accountInfo.accountAgeIndicator) &&
        Objects.equals(this.accountChangeDate, accountInfo.accountChangeDate) &&
        Objects.equals(this.accountChangeIndicator, accountInfo.accountChangeIndicator) &&
        Objects.equals(this.accountCreationDate, accountInfo.accountCreationDate) &&
        Objects.equals(this.accountType, accountInfo.accountType) &&
        Objects.equals(this.addCardAttemptsDay, accountInfo.addCardAttemptsDay) &&
        Objects.equals(this.deliveryAddressUsageDate, accountInfo.deliveryAddressUsageDate) &&
        Objects.equals(this.deliveryAddressUsageIndicator, accountInfo.deliveryAddressUsageIndicator) &&
        Objects.equals(this.homePhone, accountInfo.homePhone) &&
        Objects.equals(this.mobilePhone, accountInfo.mobilePhone) &&
        Objects.equals(this.passwordChangeDate, accountInfo.passwordChangeDate) &&
        Objects.equals(this.passwordChangeIndicator, accountInfo.passwordChangeIndicator) &&
        Objects.equals(this.pastTransactionsDay, accountInfo.pastTransactionsDay) &&
        Objects.equals(this.pastTransactionsYear, accountInfo.pastTransactionsYear) &&
        Objects.equals(this.paymentAccountAge, accountInfo.paymentAccountAge) &&
        Objects.equals(this.paymentAccountIndicator, accountInfo.paymentAccountIndicator) &&
        Objects.equals(this.purchasesLast6Months, accountInfo.purchasesLast6Months) &&
        Objects.equals(this.suspiciousActivity, accountInfo.suspiciousActivity) &&
        Objects.equals(this.workPhone, accountInfo.workPhone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountAgeIndicator, accountChangeDate, accountChangeIndicator, accountCreationDate, accountType, addCardAttemptsDay, deliveryAddressUsageDate, deliveryAddressUsageIndicator, homePhone, mobilePhone, passwordChangeDate, passwordChangeIndicator, pastTransactionsDay, pastTransactionsYear, paymentAccountAge, paymentAccountIndicator, purchasesLast6Months, suspiciousActivity, workPhone);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountInfo {\n");
    sb.append("    accountAgeIndicator: ").append(toIndentedString(accountAgeIndicator)).append("\n");
    sb.append("    accountChangeDate: ").append(toIndentedString(accountChangeDate)).append("\n");
    sb.append("    accountChangeIndicator: ").append(toIndentedString(accountChangeIndicator)).append("\n");
    sb.append("    accountCreationDate: ").append(toIndentedString(accountCreationDate)).append("\n");
    sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
    sb.append("    addCardAttemptsDay: ").append(toIndentedString(addCardAttemptsDay)).append("\n");
    sb.append("    deliveryAddressUsageDate: ").append(toIndentedString(deliveryAddressUsageDate)).append("\n");
    sb.append("    deliveryAddressUsageIndicator: ").append(toIndentedString(deliveryAddressUsageIndicator)).append("\n");
    sb.append("    homePhone: ").append(toIndentedString(homePhone)).append("\n");
    sb.append("    mobilePhone: ").append(toIndentedString(mobilePhone)).append("\n");
    sb.append("    passwordChangeDate: ").append(toIndentedString(passwordChangeDate)).append("\n");
    sb.append("    passwordChangeIndicator: ").append(toIndentedString(passwordChangeIndicator)).append("\n");
    sb.append("    pastTransactionsDay: ").append(toIndentedString(pastTransactionsDay)).append("\n");
    sb.append("    pastTransactionsYear: ").append(toIndentedString(pastTransactionsYear)).append("\n");
    sb.append("    paymentAccountAge: ").append(toIndentedString(paymentAccountAge)).append("\n");
    sb.append("    paymentAccountIndicator: ").append(toIndentedString(paymentAccountIndicator)).append("\n");
    sb.append("    purchasesLast6Months: ").append(toIndentedString(purchasesLast6Months)).append("\n");
    sb.append("    suspiciousActivity: ").append(toIndentedString(suspiciousActivity)).append("\n");
    sb.append("    workPhone: ").append(toIndentedString(workPhone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accountAgeIndicator");
    openapiFields.add("accountChangeDate");
    openapiFields.add("accountChangeIndicator");
    openapiFields.add("accountCreationDate");
    openapiFields.add("accountType");
    openapiFields.add("addCardAttemptsDay");
    openapiFields.add("deliveryAddressUsageDate");
    openapiFields.add("deliveryAddressUsageIndicator");
    openapiFields.add("homePhone");
    openapiFields.add("mobilePhone");
    openapiFields.add("passwordChangeDate");
    openapiFields.add("passwordChangeIndicator");
    openapiFields.add("pastTransactionsDay");
    openapiFields.add("pastTransactionsYear");
    openapiFields.add("paymentAccountAge");
    openapiFields.add("paymentAccountIndicator");
    openapiFields.add("purchasesLast6Months");
    openapiFields.add("suspiciousActivity");
    openapiFields.add("workPhone");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AccountInfo
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AccountInfo.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccountInfo is not found in the empty JSON string", AccountInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!AccountInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AccountInfo` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("homePhone") != null && !jsonObj.get("homePhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homePhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homePhone").toString()));
      }
      if (jsonObj.get("mobilePhone") != null && !jsonObj.get("mobilePhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobilePhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mobilePhone").toString()));
      }
      if (jsonObj.get("workPhone") != null && !jsonObj.get("workPhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPhone").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccountInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccountInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccountInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccountInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<AccountInfo>() {
           @Override
           public void write(JsonWriter out, AccountInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AccountInfo read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AccountInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AccountInfo
  * @throws IOException if the JSON string is invalid with respect to AccountInfo
  */
  public static AccountInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccountInfo.class);
  }

 /**
  * Convert an instance of AccountInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

