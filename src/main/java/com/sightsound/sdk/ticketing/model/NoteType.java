/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sightsound.sdk.ticketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets NoteType
 */
@JsonAdapter(NoteType.Adapter.class)
public enum NoteType {
  
  AGENT("AGENT"),
  
  ATTRACTION("ATTRACTION"),
  
  GROUP_AGENT("GROUP_AGENT"),
  
  MEAL("MEAL"),
  
  MEAL_RESTR("MEAL_RESTR"),
  
  CUST_PRIVATE("CUST_PRIVATE"),
  
  CUST_GIFT_CARD("CUST_GIFT_CARD"),
  
  BOX("BOX"),
  
  MERCHANDISE("MERCHANDISE"),
  
  POS("POS"),
  
  GIFT_CARD("GIFT_CARD"),
  
  CUST_SEAT_ALERT_MT("CUST_SEAT_ALERT_MT"),
  
  CUST_SEAT_ALERT_BR("CUST_SEAT_ALERT_BR"),
  
  CUST_SEAT_ALERT_LW("CUST_SEAT_ALERT_LW"),
  
  FIT("FIT"),
  
  RES("RES"),
  
  SEATING("SEATING"),
  
  PAYMENT("PAYMENT"),
  
  CANCEL("CANCEL"),
  
  CUST("CUST"),
  
  CUST_ALERT("CUST_ALERT"),
  
  CUST_SALES_COMM("CUST_SALES_COMM"),
  
  CUST_TOUCHES("CUST_TOUCHES"),
  
  RES_ALERT("RES_ALERT"),
  
  SPL_SITUATION("SPL_SITUATION"),
  
  VOUCHERS("VOUCHERS");

  private String value;

  NoteType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static NoteType fromValue(String value) {
    for (NoteType b : NoteType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<NoteType> {
    @Override
    public void write(final JsonWriter jsonWriter, final NoteType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public NoteType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return NoteType.fromValue(value);
    }
  }
}

