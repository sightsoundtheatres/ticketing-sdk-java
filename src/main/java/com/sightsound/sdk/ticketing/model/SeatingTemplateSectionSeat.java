/*
 * Partner Ticketing API
 * Sight & Sound Theatres Partner Ticketing API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: DeveloperTeam@sight-sound.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sightsound.sdk.ticketing.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.sightsound.sdk.ticketing.model.SeatType;
import com.sightsound.sdk.ticketing.model.SeatingTemplate;
import com.sightsound.sdk.ticketing.model.SeatingTemplateSection;
import com.sightsound.sdk.ticketing.model.TheaterEntrance;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.sightsound.sdk.ticketing.JSON;

/**
 * SeatingTemplateSectionSeat
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-07-18T19:37:37.998841Z[Etc/UTC]")
public class SeatingTemplateSectionSeat {
  public static final String SERIALIZED_NAME_SECTION_CODE = "sectionCode";
  @SerializedName(SERIALIZED_NAME_SECTION_CODE)
  private String sectionCode;

  public static final String SERIALIZED_NAME_ROW_NUMBER = "rowNumber";
  @SerializedName(SERIALIZED_NAME_ROW_NUMBER)
  private String rowNumber;

  public static final String SERIALIZED_NAME_SEAT_NUMBER = "seatNumber";
  @SerializedName(SERIALIZED_NAME_SEAT_NUMBER)
  private Integer seatNumber;

  public static final String SERIALIZED_NAME_PRICE_GRADE = "priceGrade";
  @SerializedName(SERIALIZED_NAME_PRICE_GRADE)
  private String priceGrade;

  public static final String SERIALIZED_NAME_SEATING_TEMPLATE_CODE = "seatingTemplateCode";
  @SerializedName(SERIALIZED_NAME_SEATING_TEMPLATE_CODE)
  private String seatingTemplateCode;

  public static final String SERIALIZED_NAME_SEAT_TYPE = "seatType";
  @SerializedName(SERIALIZED_NAME_SEAT_TYPE)
  private SeatType seatType;

  public static final String SERIALIZED_NAME_SEAT_DESIREABILITY = "seatDesireability";
  @SerializedName(SERIALIZED_NAME_SEAT_DESIREABILITY)
  private Integer seatDesireability;

  public static final String SERIALIZED_NAME_SECTION_DESIREABILITY = "sectionDesireability";
  @SerializedName(SERIALIZED_NAME_SECTION_DESIREABILITY)
  private Integer sectionDesireability;

  public static final String SERIALIZED_NAME_ORDER_TIX = "orderTix";
  @SerializedName(SERIALIZED_NAME_ORDER_TIX)
  private Boolean orderTix;

  public static final String SERIALIZED_NAME_BOOKING_PHASE = "bookingPhase";
  @SerializedName(SERIALIZED_NAME_BOOKING_PHASE)
  private Integer bookingPhase;

  public static final String SERIALIZED_NAME_SECTOR_CODE = "sectorCode";
  @SerializedName(SERIALIZED_NAME_SECTOR_CODE)
  private String sectorCode;

  public static final String SERIALIZED_NAME_ENTRANCE_CODE = "entranceCode";
  @SerializedName(SERIALIZED_NAME_ENTRANCE_CODE)
  private TheaterEntrance entranceCode;

  public static final String SERIALIZED_NAME_TEMPLATE = "template";
  @SerializedName(SERIALIZED_NAME_TEMPLATE)
  private SeatingTemplate template;

  public static final String SERIALIZED_NAME_SECTION = "section";
  @SerializedName(SERIALIZED_NAME_SECTION)
  private SeatingTemplateSection section;

  public static final String SERIALIZED_NAME_XCOORDINATE = "xcoordinate";
  @SerializedName(SERIALIZED_NAME_XCOORDINATE)
  private Integer xcoordinate;

  public static final String SERIALIZED_NAME_YCOORDINATE = "ycoordinate";
  @SerializedName(SERIALIZED_NAME_YCOORDINATE)
  private Integer ycoordinate;

  public static final String SERIALIZED_NAME_ZROTATION = "zrotation";
  @SerializedName(SERIALIZED_NAME_ZROTATION)
  private Integer zrotation;

  public SeatingTemplateSectionSeat() { 
  }

  public SeatingTemplateSectionSeat sectionCode(String sectionCode) {
    
    this.sectionCode = sectionCode;
    return this;
  }

   /**
   * Get sectionCode
   * @return sectionCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getSectionCode() {
    return sectionCode;
  }


  public void setSectionCode(String sectionCode) {
    this.sectionCode = sectionCode;
  }


  public SeatingTemplateSectionSeat rowNumber(String rowNumber) {
    
    this.rowNumber = rowNumber;
    return this;
  }

   /**
   * Get rowNumber
   * @return rowNumber
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getRowNumber() {
    return rowNumber;
  }


  public void setRowNumber(String rowNumber) {
    this.rowNumber = rowNumber;
  }


  public SeatingTemplateSectionSeat seatNumber(Integer seatNumber) {
    
    this.seatNumber = seatNumber;
    return this;
  }

   /**
   * Get seatNumber
   * @return seatNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSeatNumber() {
    return seatNumber;
  }


  public void setSeatNumber(Integer seatNumber) {
    this.seatNumber = seatNumber;
  }


  public SeatingTemplateSectionSeat priceGrade(String priceGrade) {
    
    this.priceGrade = priceGrade;
    return this;
  }

   /**
   * Get priceGrade
   * @return priceGrade
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getPriceGrade() {
    return priceGrade;
  }


  public void setPriceGrade(String priceGrade) {
    this.priceGrade = priceGrade;
  }


  public SeatingTemplateSectionSeat seatingTemplateCode(String seatingTemplateCode) {
    
    this.seatingTemplateCode = seatingTemplateCode;
    return this;
  }

   /**
   * Get seatingTemplateCode
   * @return seatingTemplateCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getSeatingTemplateCode() {
    return seatingTemplateCode;
  }


  public void setSeatingTemplateCode(String seatingTemplateCode) {
    this.seatingTemplateCode = seatingTemplateCode;
  }


  public SeatingTemplateSectionSeat seatType(SeatType seatType) {
    
    this.seatType = seatType;
    return this;
  }

   /**
   * Get seatType
   * @return seatType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SeatType getSeatType() {
    return seatType;
  }


  public void setSeatType(SeatType seatType) {
    this.seatType = seatType;
  }


  public SeatingTemplateSectionSeat seatDesireability(Integer seatDesireability) {
    
    this.seatDesireability = seatDesireability;
    return this;
  }

   /**
   * Get seatDesireability
   * @return seatDesireability
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSeatDesireability() {
    return seatDesireability;
  }


  public void setSeatDesireability(Integer seatDesireability) {
    this.seatDesireability = seatDesireability;
  }


  public SeatingTemplateSectionSeat sectionDesireability(Integer sectionDesireability) {
    
    this.sectionDesireability = sectionDesireability;
    return this;
  }

   /**
   * Get sectionDesireability
   * @return sectionDesireability
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSectionDesireability() {
    return sectionDesireability;
  }


  public void setSectionDesireability(Integer sectionDesireability) {
    this.sectionDesireability = sectionDesireability;
  }


  public SeatingTemplateSectionSeat orderTix(Boolean orderTix) {
    
    this.orderTix = orderTix;
    return this;
  }

   /**
   * Get orderTix
   * @return orderTix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getOrderTix() {
    return orderTix;
  }


  public void setOrderTix(Boolean orderTix) {
    this.orderTix = orderTix;
  }


  public SeatingTemplateSectionSeat bookingPhase(Integer bookingPhase) {
    
    this.bookingPhase = bookingPhase;
    return this;
  }

   /**
   * Get bookingPhase
   * @return bookingPhase
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getBookingPhase() {
    return bookingPhase;
  }


  public void setBookingPhase(Integer bookingPhase) {
    this.bookingPhase = bookingPhase;
  }


  public SeatingTemplateSectionSeat sectorCode(String sectorCode) {
    
    this.sectorCode = sectorCode;
    return this;
  }

   /**
   * Get sectorCode
   * @return sectorCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSectorCode() {
    return sectorCode;
  }


  public void setSectorCode(String sectorCode) {
    this.sectorCode = sectorCode;
  }


  public SeatingTemplateSectionSeat entranceCode(TheaterEntrance entranceCode) {
    
    this.entranceCode = entranceCode;
    return this;
  }

   /**
   * Get entranceCode
   * @return entranceCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TheaterEntrance getEntranceCode() {
    return entranceCode;
  }


  public void setEntranceCode(TheaterEntrance entranceCode) {
    this.entranceCode = entranceCode;
  }


  public SeatingTemplateSectionSeat template(SeatingTemplate template) {
    
    this.template = template;
    return this;
  }

   /**
   * Get template
   * @return template
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SeatingTemplate getTemplate() {
    return template;
  }


  public void setTemplate(SeatingTemplate template) {
    this.template = template;
  }


  public SeatingTemplateSectionSeat section(SeatingTemplateSection section) {
    
    this.section = section;
    return this;
  }

   /**
   * Get section
   * @return section
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SeatingTemplateSection getSection() {
    return section;
  }


  public void setSection(SeatingTemplateSection section) {
    this.section = section;
  }


  public SeatingTemplateSectionSeat xcoordinate(Integer xcoordinate) {
    
    this.xcoordinate = xcoordinate;
    return this;
  }

   /**
   * Get xcoordinate
   * @return xcoordinate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getXcoordinate() {
    return xcoordinate;
  }


  public void setXcoordinate(Integer xcoordinate) {
    this.xcoordinate = xcoordinate;
  }


  public SeatingTemplateSectionSeat ycoordinate(Integer ycoordinate) {
    
    this.ycoordinate = ycoordinate;
    return this;
  }

   /**
   * Get ycoordinate
   * @return ycoordinate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getYcoordinate() {
    return ycoordinate;
  }


  public void setYcoordinate(Integer ycoordinate) {
    this.ycoordinate = ycoordinate;
  }


  public SeatingTemplateSectionSeat zrotation(Integer zrotation) {
    
    this.zrotation = zrotation;
    return this;
  }

   /**
   * Get zrotation
   * @return zrotation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getZrotation() {
    return zrotation;
  }


  public void setZrotation(Integer zrotation) {
    this.zrotation = zrotation;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SeatingTemplateSectionSeat seatingTemplateSectionSeat = (SeatingTemplateSectionSeat) o;
    return Objects.equals(this.sectionCode, seatingTemplateSectionSeat.sectionCode) &&
        Objects.equals(this.rowNumber, seatingTemplateSectionSeat.rowNumber) &&
        Objects.equals(this.seatNumber, seatingTemplateSectionSeat.seatNumber) &&
        Objects.equals(this.priceGrade, seatingTemplateSectionSeat.priceGrade) &&
        Objects.equals(this.seatingTemplateCode, seatingTemplateSectionSeat.seatingTemplateCode) &&
        Objects.equals(this.seatType, seatingTemplateSectionSeat.seatType) &&
        Objects.equals(this.seatDesireability, seatingTemplateSectionSeat.seatDesireability) &&
        Objects.equals(this.sectionDesireability, seatingTemplateSectionSeat.sectionDesireability) &&
        Objects.equals(this.orderTix, seatingTemplateSectionSeat.orderTix) &&
        Objects.equals(this.bookingPhase, seatingTemplateSectionSeat.bookingPhase) &&
        Objects.equals(this.sectorCode, seatingTemplateSectionSeat.sectorCode) &&
        Objects.equals(this.entranceCode, seatingTemplateSectionSeat.entranceCode) &&
        Objects.equals(this.template, seatingTemplateSectionSeat.template) &&
        Objects.equals(this.section, seatingTemplateSectionSeat.section) &&
        Objects.equals(this.xcoordinate, seatingTemplateSectionSeat.xcoordinate) &&
        Objects.equals(this.ycoordinate, seatingTemplateSectionSeat.ycoordinate) &&
        Objects.equals(this.zrotation, seatingTemplateSectionSeat.zrotation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sectionCode, rowNumber, seatNumber, priceGrade, seatingTemplateCode, seatType, seatDesireability, sectionDesireability, orderTix, bookingPhase, sectorCode, entranceCode, template, section, xcoordinate, ycoordinate, zrotation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SeatingTemplateSectionSeat {\n");
    sb.append("    sectionCode: ").append(toIndentedString(sectionCode)).append("\n");
    sb.append("    rowNumber: ").append(toIndentedString(rowNumber)).append("\n");
    sb.append("    seatNumber: ").append(toIndentedString(seatNumber)).append("\n");
    sb.append("    priceGrade: ").append(toIndentedString(priceGrade)).append("\n");
    sb.append("    seatingTemplateCode: ").append(toIndentedString(seatingTemplateCode)).append("\n");
    sb.append("    seatType: ").append(toIndentedString(seatType)).append("\n");
    sb.append("    seatDesireability: ").append(toIndentedString(seatDesireability)).append("\n");
    sb.append("    sectionDesireability: ").append(toIndentedString(sectionDesireability)).append("\n");
    sb.append("    orderTix: ").append(toIndentedString(orderTix)).append("\n");
    sb.append("    bookingPhase: ").append(toIndentedString(bookingPhase)).append("\n");
    sb.append("    sectorCode: ").append(toIndentedString(sectorCode)).append("\n");
    sb.append("    entranceCode: ").append(toIndentedString(entranceCode)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    section: ").append(toIndentedString(section)).append("\n");
    sb.append("    xcoordinate: ").append(toIndentedString(xcoordinate)).append("\n");
    sb.append("    ycoordinate: ").append(toIndentedString(ycoordinate)).append("\n");
    sb.append("    zrotation: ").append(toIndentedString(zrotation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("sectionCode");
    openapiFields.add("rowNumber");
    openapiFields.add("seatNumber");
    openapiFields.add("priceGrade");
    openapiFields.add("seatingTemplateCode");
    openapiFields.add("seatType");
    openapiFields.add("seatDesireability");
    openapiFields.add("sectionDesireability");
    openapiFields.add("orderTix");
    openapiFields.add("bookingPhase");
    openapiFields.add("sectorCode");
    openapiFields.add("entranceCode");
    openapiFields.add("template");
    openapiFields.add("section");
    openapiFields.add("xcoordinate");
    openapiFields.add("ycoordinate");
    openapiFields.add("zrotation");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("sectionCode");
    openapiRequiredFields.add("rowNumber");
    openapiRequiredFields.add("priceGrade");
    openapiRequiredFields.add("seatingTemplateCode");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SeatingTemplateSectionSeat
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (SeatingTemplateSectionSeat.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in SeatingTemplateSectionSeat is not found in the empty JSON string", SeatingTemplateSectionSeat.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!SeatingTemplateSectionSeat.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SeatingTemplateSectionSeat` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SeatingTemplateSectionSeat.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("sectionCode") != null && !jsonObj.get("sectionCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sectionCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sectionCode").toString()));
      }
      if (jsonObj.get("rowNumber") != null && !jsonObj.get("rowNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rowNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rowNumber").toString()));
      }
      if (jsonObj.get("priceGrade") != null && !jsonObj.get("priceGrade").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `priceGrade` to be a primitive type in the JSON string but got `%s`", jsonObj.get("priceGrade").toString()));
      }
      if (jsonObj.get("seatingTemplateCode") != null && !jsonObj.get("seatingTemplateCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `seatingTemplateCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("seatingTemplateCode").toString()));
      }
      if (jsonObj.get("sectorCode") != null && !jsonObj.get("sectorCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sectorCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sectorCode").toString()));
      }
      // validate the optional field `template`
      if (jsonObj.getAsJsonObject("template") != null) {
        SeatingTemplate.validateJsonObject(jsonObj.getAsJsonObject("template"));
      }
      // validate the optional field `section`
      if (jsonObj.getAsJsonObject("section") != null) {
        SeatingTemplateSection.validateJsonObject(jsonObj.getAsJsonObject("section"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SeatingTemplateSectionSeat.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SeatingTemplateSectionSeat' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SeatingTemplateSectionSeat> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SeatingTemplateSectionSeat.class));

       return (TypeAdapter<T>) new TypeAdapter<SeatingTemplateSectionSeat>() {
           @Override
           public void write(JsonWriter out, SeatingTemplateSectionSeat value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SeatingTemplateSectionSeat read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SeatingTemplateSectionSeat given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SeatingTemplateSectionSeat
  * @throws IOException if the JSON string is invalid with respect to SeatingTemplateSectionSeat
  */
  public static SeatingTemplateSectionSeat fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SeatingTemplateSectionSeat.class);
  }

 /**
  * Convert an instance of SeatingTemplateSectionSeat to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

